[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.1)
[debug] Load.defaultLoad until apply took 122.254343ms
[debug]           Load.loadUnit: plugins took 211.171995ms
[debug]           Load.loadUnit: defsScala took 0.560386ms
[debug] [Loading] Scanning directory /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 37.591445 ms
[debug]               Load.resolveProject(wordcountscala-build) took 102.950348ms
[debug]             Load.loadTransitive: finalizeProject(Project(id wordcountscala-build, base: /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project, plugins: List(<none>))) took 184.363924ms
[debug] [Loading] Done in /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project, returning: (wordcountscala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 242.534285ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.68995ms
[debug]         Load.loadUnit(file:/home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project/, ...) took 465.808961ms
[debug]       Load.apply: load took 783.402242ms
[debug]       Load.apply: resolveProjects took 10.383791ms
[debug]       Load.apply: finalTransforms took 85.814356ms
[debug]       Load.apply: config.delegates took 10.931052ms
[debug]       Load.apply: Def.make(settings)... took 526.971067ms
[debug]       Load.apply: structureIndex took 132.630288ms
[debug]       Load.apply: mkStreams took 2.602122ms
[info] loading project definition from /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3323.162763ms
[debug]     Load.loadUnit: defsScala took 0.004418ms
[debug] [Loading] Scanning directory /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala
[debug]       Load.loadUnit: mkEval took 5.245091ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.299512 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.862827ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala, plugins: List(<none>))) took 8.086724ms
[debug] [Loading] Done in /home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4291.892877ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.548848ms
[debug]   Load.loadUnit(file:/home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/, ...) took 7626.972999ms
[debug] Load.apply: load took 7659.609349ms
[debug] Load.apply: resolveProjects took 0.163799ms
[debug] Load.apply: finalTransforms took 24.142259ms
[debug] Load.apply: config.delegates took 0.473291ms
[debug] Load.apply: Def.make(settings)... took 126.466756ms
[debug] Load.apply: structureIndex took 37.800148ms
[debug] Load.apply: mkStreams took 0.003677ms
[info] set current project to SpikeDetectionScala (in build file:/home/bolot/Documents/Thesis/StreamBenchmarkScala/WordCountScala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///home/bolot/.sbt/1.0/server/b57478a958bcf3f4ef76/sock
[debug] Writing bsp connection file
[info] started sbt server
